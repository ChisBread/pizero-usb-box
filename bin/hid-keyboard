#!/bin/python3
#-*- coding: UTF-8 -*-
import sys
sys.path.append('/usr/local/pi0usbbox/pi0hid')
import pi0hid
import curses
from curses.textpad import Textbox, rectangle
import locale
locale.setlocale(locale.LC_ALL, '')
cmap = {
    "KEY_DC":["delete"], "KEY_IC":["insert"],
    "KEY_PPAGE":["pageup"], "KEY_NPAGE":["pagedown"],
}
specctrl = {
    'J':["enter"], 'i':["tab"],
}
def printmod(stdscr, c):
    stdscr.clear()
    stdscr.addstr(0, 0, "Enter Print message: (hit Ctrl-G to send)")
    editwin = curses.newwin(5,40, 2,1)
    rectangle(stdscr, 1,0, 1+5+1, 1+40+1)
    stdscr.refresh()
    box = Textbox(editwin)
    # Let the user edit until Ctrl-G is struck.
    box.edit()
    # Get resulting contents
    message = box.gather()
    lines = message.split('\n')
    for i in range(len(lines)): 
        s = ''
        if c == '^P':
            s = "p="+lines[i]
        if i+1 < len(lines):
            s += "\n"
        pi0hid.seqs(['d=/dev/hidg0', s])
    stdscr.clear()


def gettrans(stdscr):
    craw = stdscr.getch()
    c = curses.keyname(craw).decode()
    if c == '^P' or c == '^R':
        printmod(stdscr, c)
        return
    if (c >= '0' and c <= '9') or (c >= 'a' and c <= 'z'):
        return [c]
    pos = ")!@#$%^&*(".find(c)
    if len(c) == 1 and pos != -1:
        return ["left-shift", str(pos)]
    if len(c) == 1 and c >= 'A' and c <= 'Z':
        return ["left-shift ", c]
    if len(c) == 2 and c[0] == '^' and ((c[1] >= 'A' and c[1] <= 'Z') or (c[1] >= 'a' and c[1] <= 'z')):
        if c[1] in specctrl:
            return specctrl[c[1]]
        return ["left-ctrl", c[1]]
    if c in cmap:
        return cmap[c]
    if len(c) > 4 and "KEY_" == c[:4]:
        return [c[4:]]
    return [c]

def terminal_display(stdscr):
    stdscr.leaveok(1) #配置光标随字符更新移动
    curses.cbreak() #关闭行缓冲,禁用除中断和字符流控制以外的字符处理
    #curses.echo() #输入字符回显
    stdscr.keypad(1) #开启特殊键盘按键响应
    curses.start_color() #启用颜色功能
    curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK) #更改颜色配对，序号，前景色（字颜色），背景色
    curses.init_pair(2, curses.COLOR_YELLOW, curses.COLOR_BLACK)
    curses.init_pair(3, curses.COLOR_RED, curses.COLOR_BLACK)
    stdscr.clear()
    stdscr.nodelay(0)
    while 1:
        stdscr.addstr(0, 0, "PrintMod: CTRL+P  RawMod: CTRL+R\n")
        stdscr.addstr(1, 0, "happy hacking!\n", curses.color_pair(2))
        stdscr.refresh()
        key=gettrans(stdscr)
        if key:
            pi0hid.seqs(['d=/dev/hidg0', key])
            stdscr.addstr(3, 0, 'hid-sendkeys %s\n'%key, curses.color_pair(0))
        stdscr.refresh()

if __name__ == '__main__':
    curses.wrapper(terminal_display)
